/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package practica_1;

import java.text.ParseException;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author LABORATORIOS
 */
public class PantallaPrincipal extends javax.swing.JFrame {
    //variable alumno para saber si en alumno o profesor, la he creado de modo que si no se elige tiene valor 0.
    public int alumno = 0;
    //variables para guardar los datos que se mostraran en la tabla
    private String[] fila = {"","","",""};
    private String nombre, hora, provincia, cargo;
    public PantallaSecundaria pantalla2;
    public PantallaPrincipal() {
        initComponents();
        //le cambio el titulo a la vantana y la deshabilito el boton añadir para que no se pueda utilizar hasta que hayas seleccionado si eres profesor o estudiante 
        this.setTitle("Practica 1");
        jButtonAnadir.setEnabled(false);
        this.setLocationRelativeTo(null);
    }
    //este metodo devuelve los valores que se introduciran en la tabla, solo se activa cuando se hayan pasado todos los requisitos en el boton añadir
    public String[] anadirRows(){
        if (alumno==-1) {
            cargo = "Profesor";
        }else if (alumno == 1) {
            cargo= "Alumno";
        }
        String valores[] = {nombre,hora,provincia,cargo};
        return valores;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jToggleButtonProfesor = new javax.swing.JToggleButton();
        jToggleButtonEstudiante = new javax.swing.JToggleButton();
        jPanel3 = new javax.swing.JPanel();
        jButtonAnadir = new javax.swing.JButton();
        jButtonLimpiar = new javax.swing.JButton();
        jButtonFinalizar = new javax.swing.JButton();
        jButtonAyuda = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldHora = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldProvincia = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 153, 255));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jToggleButtonProfesor.setBackground(new java.awt.Color(153, 153, 255));
        jToggleButtonProfesor.setText("Profesor");
        jToggleButtonProfesor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonProfesorActionPerformed(evt);
            }
        });
        jPanel1.add(jToggleButtonProfesor);

        jToggleButtonEstudiante.setBackground(new java.awt.Color(255, 204, 153));
        jToggleButtonEstudiante.setText("Estudiante");
        jToggleButtonEstudiante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonEstudianteActionPerformed(evt);
            }
        });
        jPanel1.add(jToggleButtonEstudiante);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        jButtonAnadir.setBackground(new java.awt.Color(153, 153, 255));
        jButtonAnadir.setText("Añadir");
        jButtonAnadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnadirActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonAnadir);

        jButtonLimpiar.setBackground(new java.awt.Color(255, 153, 153));
        jButtonLimpiar.setText("Limpiar");
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonLimpiar);

        jButtonFinalizar.setBackground(new java.awt.Color(153, 255, 153));
        jButtonFinalizar.setText("Finalizar");
        jButtonFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFinalizarActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonFinalizar);

        jButtonAyuda.setBackground(new java.awt.Color(255, 153, 255));
        jButtonAyuda.setText("Ayuda");
        jButtonAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAyudaActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonAyuda);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Nombre");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_TRAILING;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(7, 4, 7, 4);
        jPanel2.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(7, 4, 7, 4);
        jPanel2.add(jTextFieldNombre, gridBagConstraints);

        jLabel2.setText("Hora de llegada");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(7, 4, 7, 4);
        jPanel2.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(7, 4, 7, 4);
        jPanel2.add(jTextFieldHora, gridBagConstraints);

        jLabel3.setText("Provincia (mayusculas)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(7, 4, 7, 4);
        jPanel2.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(7, 4, 7, 4);
        jPanel2.add(jTextFieldProvincia, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jToggleButtonProfesorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonProfesorActionPerformed
        //El boton profesor y estudiante son de tipo Toggle los que me permite que cada vez que lo presione este muestre un JOptionPane, cuando se clicka en uno el otro se deselecciona.
        JOptionPane.showMessageDialog(null, "Tendra que ir a la Ala norte", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
        //-1 son los profesores y 1 son los estudiantes
        alumno = -1;
        jToggleButtonEstudiante.setSelected(false);
        jButtonAnadir.setEnabled(true);
    }//GEN-LAST:event_jToggleButtonProfesorActionPerformed

    private void jButtonAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAyudaActionPerformed
        //El boton Ayuda muestra un JOptionPane con un poco de informacion util
        JOptionPane.showMessageDialog(null, "Seleccione si eres estudiante o profesor, rellene los datos, formato de hora 24:00 \ny en el apartado de provician esta debera ir en mayusculas \ny si eres del exterior escribir 'EXTERIOR'.", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButtonAyudaActionPerformed

    private void jToggleButtonEstudianteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonEstudianteActionPerformed
        JOptionPane.showMessageDialog(null, "Tendra que ir a la Ala sur", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
        alumno = 1;
        jToggleButtonProfesor.setSelected(false);
        jButtonAnadir.setEnabled(true);
    }//GEN-LAST:event_jToggleButtonEstudianteActionPerformed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        //el boton limpiar limpia los campos
        jTextFieldHora.setText("");
        jTextFieldNombre.setText("");
        jTextFieldProvincia.setText("");
    }//GEN-LAST:event_jButtonLimpiarActionPerformed

    private void jButtonFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFinalizarActionPerformed
        //El boton finalizar finaliza la ventana principal
        this.dispose();
    }//GEN-LAST:event_jButtonFinalizarActionPerformed

    private void jButtonAnadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnadirActionPerformed
        //recojo los datos de los JTextField y los guardo en variables
        hora = jTextFieldHora.getText();
        nombre = jTextFieldNombre.getText();
        provincia = jTextFieldProvincia.getText();
        //creo una banderas para saber que todos los campos estan correctos
        boolean horaCorrecto = false, provinciaCorrecto = false, nombreCorrecto = false;
        //este if comprueba que los campos no estan en blanco o tienen solo espcios
        if (hora.isBlank() || nombre.isBlank() || provincia.isBlank()){
            JOptionPane.showMessageDialog(null, "Alerta uno de los campos esta vacio", "Alerta", JOptionPane.WARNING_MESSAGE);
        }else{
            //para verificar las horas les hago un split con identificador :, si esta linea no da de resultado un array de String de longitud 2 el formato de la hora sera incorrecto 
            String parteHoras[] = hora.split(":");
            if(parteHoras.length == 2){
                //con este try catch conpruebo que las dos partes sean numeros y ademas que estan en formato 24h de modo 23:59 - 00:00
                try {
                int horas = Integer.parseInt(parteHoras[0]);
                int minutos = Integer.parseInt(parteHoras[1]);
                if (horas >= 0 && horas <= 23 && minutos >= 0 && minutos <= 59) {
                    horaCorrecto = true;
                }else JOptionPane.showMessageDialog(null, "Formato de hora incorrecta.", "Alerta", JOptionPane.WARNING_MESSAGE);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Formato de hora incorrecta.", "Alerta", JOptionPane.WARNING_MESSAGE);
            }
            }else JOptionPane.showMessageDialog(null, "Formato de hora incorrecta.", "Alerta", JOptionPane.WARNING_MESSAGE);
            //Esta parte comprueba que la provincia esta en mayuscula, simplemente si el string es igual al string.toUpperCase
            if (provincia == provincia.toUpperCase()) {
                provinciaCorrecto = true;
            }else{
                JOptionPane.showMessageDialog(null, "La provincia tiene que estar en mayusculas.", "Alerta", JOptionPane.WARNING_MESSAGE);
            }
            //Este if comprueba que en el nombre no hay numeros, esto funciona con maches que funciona con una Pattern qeu son como identificadores como se puede ver en https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#sum
            if(nombre.matches(".*\\d.*")){
                JOptionPane.showMessageDialog(null, "El nombre no puede contener números.", "Alerta", JOptionPane.WARNING_MESSAGE);         
            }else{
                nombreCorrecto = true;
            }
            //si todo es correcto lanza la pantalla 2 o añade la fila si ya esta lanzada.
            if ( nombreCorrecto == true && horaCorrecto == true && provinciaCorrecto == true ) {
                if (pantalla2 != null) {
                    pantalla2.anadirow();
                }else{
                    pantalla2 = new PantallaSecundaria(this,false);
                    pantalla2.setVisible(true);
                }
                if (!pantalla2.isVisible()){
                    pantalla2.setVisible(true);
        }
            }
            
            
        }
    }//GEN-LAST:event_jButtonAnadirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnadir;
    private javax.swing.JButton jButtonAyuda;
    private javax.swing.JButton jButtonFinalizar;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextFieldHora;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldProvincia;
    private javax.swing.JToggleButton jToggleButtonEstudiante;
    private javax.swing.JToggleButton jToggleButtonProfesor;
    // End of variables declaration//GEN-END:variables
}
