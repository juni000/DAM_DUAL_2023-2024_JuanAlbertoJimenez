/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LABORATORIOS
 */
public class Main extends javax.swing.JFrame {
    DefaultTableModel tablainterna;
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Base de datos de universidad");
        
    }
    private void actualizarTabla(String[] columnas,ArrayList<String[]> filas){
        tablainterna = new DefaultTableModel();
        tablainterna.setColumnIdentifiers(columnas);
        for (int i = 0; i < filas.size(); i++) {
            tablainterna.addRow(filas.get(i));
        }
        jTable1.setModel(tablainterna);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuProfesor = new javax.swing.JMenu();
        jMenuItemAnadirProfesor = new javax.swing.JMenuItem();
        jMenuItemEliminarProfesor = new javax.swing.JMenuItem();
        jMenuItemModificarProfesor = new javax.swing.JMenuItem();
        jMenuItemMostrarProfesores = new javax.swing.JMenuItem();
        jMenuEliminarAlumno = new javax.swing.JMenu();
        jMenuItemAnadirAlumno = new javax.swing.JMenuItem();
        jMenuItemEliminarAlumno = new javax.swing.JMenuItem();
        jMenuItemModificarAlumno = new javax.swing.JMenuItem();
        jMenuItemMostrarAlumnos = new javax.swing.JMenuItem();
        jMenuAsignatura = new javax.swing.JMenu();
        jMenuItemAnadirAsignatura = new javax.swing.JMenuItem();
        jMenuItemEliminarAsignatura = new javax.swing.JMenuItem();
        jMenuItemMostrarAA = new javax.swing.JMenuItem();
        jMenuItemMostrarAP = new javax.swing.JMenuItem();
        jMenuDepartamento = new javax.swing.JMenu();
        jMenuItemAñadirDepartamento = new javax.swing.JMenuItem();
        jMenuItemMostrarDepartamentos = new javax.swing.JMenuItem();
        jMenuSalir = new javax.swing.JMenu();
        jMenuItemSalir = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
        );

        jMenuProfesor.setText("Profesor");

        jMenuItemAnadirProfesor.setText("Añadir Profesor");
        jMenuItemAnadirProfesor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAnadirProfesorActionPerformed(evt);
            }
        });
        jMenuProfesor.add(jMenuItemAnadirProfesor);

        jMenuItemEliminarProfesor.setText("Eliminar Profesor");
        jMenuItemEliminarProfesor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEliminarProfesorActionPerformed(evt);
            }
        });
        jMenuProfesor.add(jMenuItemEliminarProfesor);

        jMenuItemModificarProfesor.setText("Modificar Profesor");
        jMenuItemModificarProfesor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemModificarProfesorActionPerformed(evt);
            }
        });
        jMenuProfesor.add(jMenuItemModificarProfesor);

        jMenuItemMostrarProfesores.setText("Mostrar Profesores");
        jMenuItemMostrarProfesores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMostrarProfesoresActionPerformed(evt);
            }
        });
        jMenuProfesor.add(jMenuItemMostrarProfesores);

        jMenuBar1.add(jMenuProfesor);

        jMenuEliminarAlumno.setText("Alumno");

        jMenuItemAnadirAlumno.setText("Añadir Alumno");
        jMenuItemAnadirAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAnadirAlumnoActionPerformed(evt);
            }
        });
        jMenuEliminarAlumno.add(jMenuItemAnadirAlumno);

        jMenuItemEliminarAlumno.setText("Eliminar Alumno");
        jMenuItemEliminarAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEliminarAlumnoActionPerformed(evt);
            }
        });
        jMenuEliminarAlumno.add(jMenuItemEliminarAlumno);

        jMenuItemModificarAlumno.setText("Modificar Alumno");
        jMenuItemModificarAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemModificarAlumnoActionPerformed(evt);
            }
        });
        jMenuEliminarAlumno.add(jMenuItemModificarAlumno);

        jMenuItemMostrarAlumnos.setText("Mostrar Alumnos");
        jMenuItemMostrarAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMostrarAlumnosActionPerformed(evt);
            }
        });
        jMenuEliminarAlumno.add(jMenuItemMostrarAlumnos);

        jMenuBar1.add(jMenuEliminarAlumno);

        jMenuAsignatura.setText("Asignatura");

        jMenuItemAnadirAsignatura.setText("Añadir Asignatura");
        jMenuItemAnadirAsignatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAnadirAsignaturaActionPerformed(evt);
            }
        });
        jMenuAsignatura.add(jMenuItemAnadirAsignatura);

        jMenuItemEliminarAsignatura.setText("Eliminar Asignatura");
        jMenuItemEliminarAsignatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEliminarAsignaturaActionPerformed(evt);
            }
        });
        jMenuAsignatura.add(jMenuItemEliminarAsignatura);

        jMenuItemMostrarAA.setText("Mostrar Asignatura/Alumnos");
        jMenuItemMostrarAA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMostrarAAActionPerformed(evt);
            }
        });
        jMenuAsignatura.add(jMenuItemMostrarAA);

        jMenuItemMostrarAP.setText("MostaraAsignatura/Profesores");
        jMenuItemMostrarAP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMostrarAPActionPerformed(evt);
            }
        });
        jMenuAsignatura.add(jMenuItemMostrarAP);

        jMenuBar1.add(jMenuAsignatura);

        jMenuDepartamento.setText("Departamento");

        jMenuItemAñadirDepartamento.setText("Añadir departamento");
        jMenuItemAñadirDepartamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAñadirDepartamentoActionPerformed(evt);
            }
        });
        jMenuDepartamento.add(jMenuItemAñadirDepartamento);

        jMenuItemMostrarDepartamentos.setText("Mostrar departamentos");
        jMenuItemMostrarDepartamentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMostrarDepartamentosActionPerformed(evt);
            }
        });
        jMenuDepartamento.add(jMenuItemMostrarDepartamentos);

        jMenuBar1.add(jMenuDepartamento);

        jMenuSalir.setText("Salir");

        jMenuItemSalir.setText("Salir");
        jMenuItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSalirActionPerformed(evt);
            }
        });
        jMenuSalir.add(jMenuItemSalir);

        jMenuBar1.add(jMenuSalir);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemMostrarAAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMostrarAAActionPerformed
        try {
            Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/universidad?serverTimezone=UTC", "root", "root");
            Statement st = conexion.createStatement();
            String[] columnas = {"ID","Asignatura","Creditos","Tipo","Curso","Cuatrimestre","Nombre","Apellidos"};
            String sql = "select distinct asi.id as ID, asi.nombre as Asignatura, asi.creditos as Creditos, asi.tipo as Tipo, asi.curso as Curso, asi.cuatrimestre as Cuatrimestre, a.nombre as Nombre, concat(a.apellido1,\" \", a.apellido2) as Apellidos "
                    + "from asignatura asi left join alumno_se_matricula_asignatura asma on asma.id_asignatura=asi.id "
                    + "left join alumno a on asma.id_alumno=a.id order by asi.nombre;";
            ResultSet rs = st.executeQuery(sql);
            
            ArrayList<String[]> filas = new ArrayList<>();
            
            while (rs.next()) {
                String[] fila = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5) , rs.getString(6), rs.getString(7), rs.getString(8)};
                filas.add(fila);
            }
            actualizarTabla(columnas,filas);
            
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemMostrarAAActionPerformed

    private void jMenuItemAnadirProfesorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAnadirProfesorActionPerformed
        try {
            Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/universidad?serverTimezone=UTC", "root", "root");
            String sql = "INSERT INTO profesor (nif, nombre, apellido1, apellido2, ciudad, direccion, telefono, fecha_nacimiento, sexo, id_departamento) "
                    + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);";
            JTextField jTextDNI = new JTextField();
            JTextField jTextNombre = new JTextField();
            JTextField jTextApellido1 = new JTextField();
            JTextField jTextApellido2 = new JTextField();
            JTextField jTextCiudad = new JTextField();
            JTextField jTextDireccion = new JTextField();
            JTextField jTextTelefono = new JTextField();
            JTextField jTextFecha = new JTextField();
            JTextField jTextSexo = new JTextField();
            JTextField jTextDepartamento = new JTextField();
            
            Object[] inputFields = {"Introduzca DNI", jTextDNI,
                "Introduzca nombre", jTextNombre,
                "Introduzca Primer Apellido", jTextApellido1,
                "Introduzca Segundo Apellido", jTextApellido2,
                "Introduzca Ciudad", jTextCiudad,
                "Introduzca Dirección", jTextDireccion,
                "Introduzca Telefono", jTextTelefono,
                "Introduzca Fecha de nacimineto, Ejemplo: 1999-12-31", jTextFecha,
                "Introduzca Sexo(M/H)", jTextSexo,
                "Introduzca el ID Departamento", jTextDepartamento};
            
            int option = JOptionPane.showConfirmDialog(this, inputFields, "Añadir Profesor", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            if (option == JOptionPane.OK_OPTION) {
                Date fecha = Date.valueOf(jTextFecha.getText());
                PreparedStatement consulta= conexion.prepareStatement(sql);
                consulta.setString(1, jTextDNI.getText());
                consulta.setString(2, jTextNombre.getText());
                consulta.setString(3, jTextApellido1.getText());
                consulta.setString(4, jTextApellido2.getText());
                consulta.setString(5, jTextCiudad.getText());
                consulta.setString(6, jTextDireccion.getText());
                consulta.setString(7, jTextTelefono.getText());
                consulta.setDate(8, fecha);
                consulta.setString(9, jTextSexo.getText());
                consulta.setInt(10, Integer.parseInt(jTextDepartamento.getText()));
                
                int executeUpdate = consulta.executeUpdate();
                if (executeUpdate == 0) {
                    JOptionPane.showMessageDialog(null, "Error insertando fila compruebe que todo se ha introducido cerrectamente.", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jMenuItemAnadirProfesorActionPerformed

    private void jMenuItemMostrarProfesoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMostrarProfesoresActionPerformed
        try {
            Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/universidad?serverTimezone=UTC", "root", "root");
            Statement st = conexion.createStatement();
            String[] columnas = {"ID","Nombre","Apellidos","DNI","Departamento"};
            String sql = "select p.id as ID, p.nombre as Nombre, concat(p.apellido1,\" \", p.apellido2) as Apellidos, p.nif as DNI, d.nombre as Departamento from profesor p join departamento d on p.id_departamento=d.id order by p.nombre; ";
            ResultSet rs = st.executeQuery(sql);
            
            ArrayList<String[]> filas = new ArrayList<>();
            
            while (rs.next()) {
                String[] fila = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5)};
                filas.add(fila);
            }
            actualizarTabla(columnas,filas);
            
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemMostrarProfesoresActionPerformed

    private void jMenuItemMostrarAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMostrarAlumnosActionPerformed
        try {
            Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/universidad?serverTimezone=UTC", "root", "root");
            Statement st = conexion.createStatement();
            String[] columnas = {"ID","Nombre","Apellidos","DNI","Año cursado"};
            String sql = "select distinct p.id as ID, p.nombre as Nombre, concat(p.apellido1,\" \", p.apellido2) as Apellidos, p.nif as DNI, concat(anyo_inicio, \"-\", anyo_fin) as Año "
                    + "from alumno p left join alumno_se_matricula_asignatura a on p.id=a.id_alumno "
                    + "left join curso_escolar c on c.id=a.id_curso_escolar order by p.nombre; ";
            ResultSet rs = st.executeQuery(sql);
            
            ArrayList<String[]> filas = new ArrayList<>();
            
            while (rs.next()) {
                String[] fila = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5)};
                filas.add(fila);
            }
            actualizarTabla(columnas,filas);
            
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemMostrarAlumnosActionPerformed

    private void jMenuItemMostrarAPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMostrarAPActionPerformed
        try {
            Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/universidad?serverTimezone=UTC", "root", "root");
            Statement st = conexion.createStatement();
            String[] columnas = {"ID","Asignatura","Creditos","Tipo","Curso","Cuatrimestre","Nombre","Apellidos"};
            String sql = "select distinct asi.id as ID, asi.nombre as Asignatura, asi.creditos as Creditos, asi.tipo as Tipo, asi.curso as Curso, asi.cuatrimestre as Cuatrimestre, a.nombre as Nombre, concat(a.apellido1,\" \", a.apellido2) as Apellidos "
                    + "from asignatura asi left join profesor a on a.id=asi.id_profesor order by asi.nombre;";
            ResultSet rs = st.executeQuery(sql);
            
            ArrayList<String[]> filas = new ArrayList<>();
            
            while (rs.next()) {
                String[] fila = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6) , rs.getString(7), rs.getString(8)};
                filas.add(fila);
            }
            actualizarTabla(columnas,filas);
            
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemMostrarAPActionPerformed

    private void jMenuItemAnadirAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAnadirAlumnoActionPerformed
        try {
            Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/universidad?serverTimezone=UTC", "root", "root");
            String sql = "INSERT INTO alumno (nif, nombre, apellido1, apellido2, ciudad, direccion, telefono, fecha_nacimiento, sexo) " +
                    "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
            JTextField jTextDNI = new JTextField();
            JTextField jTextNombre = new JTextField();
            JTextField jTextApellido1 = new JTextField();
            JTextField jTextApellido2 = new JTextField();
            JTextField jTextCiudad = new JTextField();
            JTextField jTextDireccion = new JTextField();
            JTextField jTextTelefono = new JTextField();
            JTextField jTextFecha = new JTextField();
            JTextField jTextSexo = new JTextField();
            
            Object[] inputFields = {"Introduzca DNI", jTextDNI,
                "Introduzca nombre", jTextNombre,
                "Introduzca Primer Apellido", jTextApellido1,
                "Introduzca Segundo Apellido", jTextApellido2,
                "Introduzca Ciudad", jTextCiudad,
                "Introduzca Dirección", jTextDireccion,
                "Introduzca Telefono", jTextTelefono,
                "Introduzca Fecha de nacimineto, Ejemplo: 1999-12-31", jTextFecha,
                "Introduzca Sexo(M/H)", jTextSexo};
            
            int option = JOptionPane.showConfirmDialog(this, inputFields, "Añadir Alumno", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            if (option == JOptionPane.OK_OPTION) {
                Date fecha = Date.valueOf(jTextFecha.getText());
                PreparedStatement consulta= conexion.prepareStatement(sql);
                consulta.setString(1, jTextDNI.getText());
                consulta.setString(2, jTextNombre.getText());
                consulta.setString(3, jTextApellido1.getText());
                consulta.setString(4, jTextApellido2.getText());
                consulta.setString(5, jTextCiudad.getText());
                consulta.setString(6, jTextDireccion.getText());
                consulta.setString(7, jTextTelefono.getText());
                consulta.setDate(8, fecha);
                consulta.setString(9, jTextSexo.getText());
                
                int executeUpdate = consulta.executeUpdate();
                if (executeUpdate == 0) {
                    JOptionPane.showMessageDialog(null, "Error insertando fila compruebe que todo se ha introducido cerrectamente.", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemAnadirAlumnoActionPerformed

    private void jMenuItemAnadirAsignaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAnadirAsignaturaActionPerformed
        try {
            Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/universidad?serverTimezone=UTC", "root", "root");
            String sql = "INSERT INTO asignatura (nombre, creditos, tipo, curso, cuatrimestre, id_profesor, id_grado)" +
                "VALUES (?, ?, ?, ?, ?, ?, ?);";
            String[] tipo = {"básica", "obligatoria", "optativa"};
            JTextField jTextNombre = new JTextField();
            JTextField jTextCreditos = new JTextField();
            JComboBox jTextTipo = new JComboBox(tipo);
            JTextField jTextCurso = new JTextField();
            JTextField jTextCuatrimestre = new JTextField();
            JTextField jTextProfesor = new JTextField();
            JTextField jTextGrado = new JTextField();
            
            Object[] inputFields = {
                "Introduzca nombre", jTextNombre,
                "Introduzca creditos", jTextCreditos,
                "Introduzca el tipo", jTextTipo,
                "Introduzca el id del curso", jTextCurso,
                "Introduzca el numero del cuatrimestre", jTextCuatrimestre,
                "Introduzca ID profesor", jTextProfesor,
                "Introduzca ID grado", jTextGrado};
            
            int option = JOptionPane.showConfirmDialog(this, inputFields, "Añadir Asignatura", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            if (option == JOptionPane.OK_OPTION) {
                PreparedStatement consulta= conexion.prepareStatement(sql);
                consulta.setString(1, jTextNombre.getText());
                consulta.setString(2, jTextCreditos.getText());
                consulta.setString(3, jTextTipo.getSelectedItem().toString());
                consulta.setString(4, jTextCurso.getText());
                consulta.setString(5, jTextCuatrimestre.getText());
                consulta.setString(6, jTextProfesor.getText());
                consulta.setString(7, jTextGrado.getText());
                
                int executeUpdate = consulta.executeUpdate();
                if (executeUpdate == 0) {
                    JOptionPane.showMessageDialog(null, "Error insertando fila compruebe que todo se ha introducido cerrectamente.", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemAnadirAsignaturaActionPerformed

    private void jMenuItemAñadirDepartamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAñadirDepartamentoActionPerformed
        try {
            Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/universidad?serverTimezone=UTC", "root", "root");
            String sql = "INSERT INTO departamento (nombre)" +
                "VALUES (?);";
           
            JTextField jTextNombre = new JTextField();
            
            Object[] inputFields = {
                "Introduzca el nombre", jTextNombre
            };

            
            int option = JOptionPane.showConfirmDialog(this, inputFields, "Añadir Departamento", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            if (option == JOptionPane.OK_OPTION) {
                PreparedStatement consulta= conexion.prepareStatement(sql);
                consulta.setString(1, jTextNombre.getText());
                
                int executeUpdate = consulta.executeUpdate();
                if (executeUpdate == 0) {
                    JOptionPane.showMessageDialog(null, "Error insertando fila compruebe que todo se ha introducido cerrectamente.", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemAñadirDepartamentoActionPerformed

    private void jMenuItemMostrarDepartamentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMostrarDepartamentosActionPerformed
        try {
            Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/universidad?serverTimezone=UTC", "root", "root");
            Statement st = conexion.createStatement();
            String[] columnas = {"ID","Nombre"};
            String sql = "select id as ID, nombre as Nombre from departamento;";
            ResultSet rs = st.executeQuery(sql);
            
            ArrayList<String[]> filas = new ArrayList<>();
            
            while (rs.next()) {
                String[] fila = {rs.getString(1), rs.getString(2)};
                filas.add(fila);
            }
            actualizarTabla(columnas,filas);
            
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemMostrarDepartamentosActionPerformed

    private void jMenuItemEliminarProfesorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEliminarProfesorActionPerformed
        try {
            Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/universidad?serverTimezone=UTC", "root", "root");
            String sql = "Delete from profesor where id = ?;";
           
            JTextField jTextID = new JTextField();
            
            Object[] inputFields = {
                "Introduzca el ID del Profesor", jTextID
            };

            
            int option = JOptionPane.showConfirmDialog(this, inputFields, "Eliminar Profesor", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            if (option == JOptionPane.OK_OPTION) {
                PreparedStatement consulta= conexion.prepareStatement(sql);
                consulta.setString(1, jTextID.getText());
                
                int executeUpdate = consulta.executeUpdate();
                if (executeUpdate == 0) {
                    JOptionPane.showMessageDialog(null, "Error Eliminando fila compruebe que todo se ha introducido cerrectamente.", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemEliminarProfesorActionPerformed

    private void jMenuItemEliminarAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEliminarAlumnoActionPerformed
        try {
            Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/universidad?serverTimezone=UTC", "root", "root");
            String sql = "Delete from alumno where id = ?;";
           
            JTextField jTextID = new JTextField();
            
            Object[] inputFields = {
                "Introduzca el ID del Alumno", jTextID
            };

            
            int option = JOptionPane.showConfirmDialog(this, inputFields, "Eliminar Alumno", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            if (option == JOptionPane.OK_OPTION) {
                PreparedStatement consulta= conexion.prepareStatement(sql);
                consulta.setString(1, jTextID.getText());
                
                int executeUpdate = consulta.executeUpdate();
                if (executeUpdate == 0) {
                    JOptionPane.showMessageDialog(null, "Error Eliminando fila compruebe que todo se ha introducido cerrectamente.", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemEliminarAlumnoActionPerformed

    private void jMenuItemEliminarAsignaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEliminarAsignaturaActionPerformed
        try {
            Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/universidad?serverTimezone=UTC", "root", "root");
            String sql = "Delete from asignatura where id = ?;";
           
            JTextField jTextID = new JTextField();
            
            Object[] inputFields = {
                "Introduzca el ID de la asignatura", jTextID
            };

            
            int option = JOptionPane.showConfirmDialog(this, inputFields, "Eliminar Asignatura", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            if (option == JOptionPane.OK_OPTION) {
                PreparedStatement consulta= conexion.prepareStatement(sql);
                consulta.setString(1, jTextID.getText());
                
                int executeUpdate = consulta.executeUpdate();
                if (executeUpdate == 0) {
                    JOptionPane.showMessageDialog(null, "Error Eliminando fila compruebe que todo se ha introducido cerrectamente.", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemEliminarAsignaturaActionPerformed

    private void jMenuItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItemSalirActionPerformed

    private void jMenuItemModificarProfesorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemModificarProfesorActionPerformed
        try {
            Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/universidad?serverTimezone=UTC", "root", "root");
            String sql = "UPDATE profesor " +
                "SET nif = ?, nombre = ?, apellido1 = ?, apellido2 = ?, ciudad = ?, direccion = ?, telefono = ?, fecha_nacimiento = ?, sexo = ?, id_departamento = ? " +
                "WHERE id = ?;";
            JTextField jTextID = new JTextField();
            JTextField jTextDNI = new JTextField();
            JTextField jTextNombre = new JTextField();
            JTextField jTextApellido1 = new JTextField();
            JTextField jTextApellido2 = new JTextField();
            JTextField jTextCiudad = new JTextField();
            JTextField jTextDireccion = new JTextField();
            JTextField jTextTelefono = new JTextField();
            JTextField jTextFecha = new JTextField();
            JTextField jTextSexo = new JTextField();
            JTextField jTextDepartamento = new JTextField();
            
            Object[] inputFields = {"Introduzca ID del profesor", jTextID,
                "Introduzca DNI", jTextDNI,
                "Introduzca nombre", jTextNombre,
                "Introduzca Primer Apellido", jTextApellido1,
                "Introduzca Segundo Apellido", jTextApellido2,
                "Introduzca Ciudad", jTextCiudad,
                "Introduzca Dirección", jTextDireccion,
                "Introduzca Telefono", jTextTelefono,
                "Introduzca Fecha de nacimineto, Ejemplo: 1999-12-31", jTextFecha,
                "Introduzca Sexo(M/H)", jTextSexo,
                "Introduzca el ID Departamento", jTextDepartamento};
            
            int option = JOptionPane.showConfirmDialog(this, inputFields, "Modificar Profesor", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            if (option == JOptionPane.OK_OPTION) {
                Date fecha = Date.valueOf(jTextFecha.getText());
                PreparedStatement consulta= conexion.prepareStatement(sql);
                consulta.setString(1, jTextDNI.getText());
                consulta.setString(2, jTextNombre.getText());
                consulta.setString(3, jTextApellido1.getText());
                consulta.setString(4, jTextApellido2.getText());
                consulta.setString(5, jTextCiudad.getText());
                consulta.setString(6, jTextDireccion.getText());
                consulta.setString(7, jTextTelefono.getText());
                consulta.setDate(8, fecha);
                consulta.setString(9, jTextSexo.getText());
                consulta.setInt(10, Integer.parseInt(jTextDepartamento.getText()));
                consulta.setString(11, jTextID.getText());
                
                int executeUpdate = consulta.executeUpdate();
                if (executeUpdate == 0) {
                    JOptionPane.showMessageDialog(null, "Error Modificando fila compruebe que todo se ha introducido cerrectamente.", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemModificarProfesorActionPerformed

    private void jMenuItemModificarAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemModificarAlumnoActionPerformed
        try {
            Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/universidad?serverTimezone=UTC", "root", "root");
            String sql = "UPDATE alumno " +
                    "SET nif = ?, nombre = ?, apellido1 = ?, apellido2 = ?, ciudad = ?, direccion = ?, telefono = ?, fecha_nacimiento = ?, sexo = ? " +
                    "WHERE id = ?;";
            JTextField jTextID = new JTextField();
            JTextField jTextDNI = new JTextField();
            JTextField jTextNombre = new JTextField();
            JTextField jTextApellido1 = new JTextField();
            JTextField jTextApellido2 = new JTextField();
            JTextField jTextCiudad = new JTextField();
            JTextField jTextDireccion = new JTextField();
            JTextField jTextTelefono = new JTextField();
            JTextField jTextFecha = new JTextField();
            JTextField jTextSexo = new JTextField();
            
            Object[] inputFields = {"Introduzca ID del alumno", jTextID,
                "Introduzca DNI", jTextDNI,
                "Introduzca nombre", jTextNombre,
                "Introduzca Primer Apellido", jTextApellido1,
                "Introduzca Segundo Apellido", jTextApellido2,
                "Introduzca Ciudad", jTextCiudad,
                "Introduzca Dirección", jTextDireccion,
                "Introduzca Telefono", jTextTelefono,
                "Introduzca Fecha de nacimineto, Ejemplo: 1999-12-31", jTextFecha,
                "Introduzca Sexo(M/H)", jTextSexo};
            
            int option = JOptionPane.showConfirmDialog(this, inputFields, "Modificar Alumno", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            if (option == JOptionPane.OK_OPTION) {
                Date fecha = Date.valueOf(jTextFecha.getText());
                PreparedStatement consulta= conexion.prepareStatement(sql);
                consulta.setString(1, jTextDNI.getText());
                consulta.setString(2, jTextNombre.getText());
                consulta.setString(3, jTextApellido1.getText());
                consulta.setString(4, jTextApellido2.getText());
                consulta.setString(5, jTextCiudad.getText());
                consulta.setString(6, jTextDireccion.getText());
                consulta.setString(7, jTextTelefono.getText());
                consulta.setDate(8, fecha);
                consulta.setString(9, jTextSexo.getText());
                consulta.setString(10, jTextID.getText());
                
                int executeUpdate = consulta.executeUpdate();
                if (executeUpdate == 0) {
                    JOptionPane.showMessageDialog(null, "Error Modificando fila compruebe que todo se ha introducido cerrectamente.", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemModificarAlumnoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenuAsignatura;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuDepartamento;
    private javax.swing.JMenu jMenuEliminarAlumno;
    private javax.swing.JMenuItem jMenuItemAnadirAlumno;
    private javax.swing.JMenuItem jMenuItemAnadirAsignatura;
    private javax.swing.JMenuItem jMenuItemAnadirProfesor;
    private javax.swing.JMenuItem jMenuItemAñadirDepartamento;
    private javax.swing.JMenuItem jMenuItemEliminarAlumno;
    private javax.swing.JMenuItem jMenuItemEliminarAsignatura;
    private javax.swing.JMenuItem jMenuItemEliminarProfesor;
    private javax.swing.JMenuItem jMenuItemModificarAlumno;
    private javax.swing.JMenuItem jMenuItemModificarProfesor;
    private javax.swing.JMenuItem jMenuItemMostrarAA;
    private javax.swing.JMenuItem jMenuItemMostrarAP;
    private javax.swing.JMenuItem jMenuItemMostrarAlumnos;
    private javax.swing.JMenuItem jMenuItemMostrarDepartamentos;
    private javax.swing.JMenuItem jMenuItemMostrarProfesores;
    private javax.swing.JMenuItem jMenuItemSalir;
    private javax.swing.JMenu jMenuProfesor;
    private javax.swing.JMenu jMenuSalir;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
